<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.prod.dao.ProdDAO">

	<resultMap type="ProdVO" id="prodMap" autoMapping="true">
		<id property="prodId" column="PROD_ID"/>
		<association property="buyer" javaType="BuyerVO" autoMapping="true" />
		<association property="lprod" javaType="LprodVO" autoMapping="true" />
<!-- 			<result property="buyerName" column="BUYER_NAME"/> -->
<!-- 		</association> -->
		<collection property="cartList" ofType="CartVO" autoMapping="true">
			<association property="member" javaType="MemberVO" autoMapping="true" />
		</collection>
	</resultMap>
	
	<sql id="searchFrag">
		<where >
			 <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
				  <choose>
				  	<when test="simpleCondition.searchType eq 'prodLgu'">
				  		INSTR(PROD_LGU,#{simpleCondition.searchWord}) > 0
				  	</when>
				  	<when test="simpleCondition.searchType eq 'prodBuyer'">
				  		INSTR(PROD_BUYER,#{simpleCondition.searchWord}) > 0
				  	</when>
				  	<when test="simpleCondition.searchType eq 'prodName'">
				  		INSTR(PROD_NAME,#{simpleCondition.searchWord}) > 0
				  	</when>
				  	<otherwise>
				  		INSTR(PROD_LGU,#{simpleCondition.searchWord}) > 0
				  		OR INSTR(PROD_BUYER,#{simpleCondition.searchWord}) > 0
				  		OR INSTR(PROD_NAME,#{simpleCondition.searchWord}) > 0
				  	</otherwise>
				  </choose>
			  </if>
		  </where>
	</sql>
	<select id="selectTotalRecord" resultType="int" parameterType="kr.or.ddit.paging.PaginationInfo">
		SELECT COUNT(*)
		FROM PROD
		<include refid="searchFrag" />
	</select>
	<select id="selectProdList" resultMap="prodMap" parameterType="kr.or.ddit.paging.PaginationInfo">
		SELECT B.*
		FROM(
			SELECT ROWNUM RNUM, A.*
			FROM(
				SELECT PROD_ID
				,PROD_BUYER
				,PROD_LGU
				,PROD_NAME
				,PROD_COST
				,PROD_PRICE
				,PROD_MILEAGE
				,PROD_INSDATE
				,BUYER_NAME
				,LPROD_NM
				FROM PROD INNER JOIN BUYER ON (PROD_BUYER = BUYER_ID)
						  INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
						  <include refid="searchFrag" />
				ORDER BY PROD.ROWID DESC
			) A
		) B
		<![CDATA[
			WHERE RNUM >= #{firstRecord} AND RNUM <= #{lastRecord}
		]]>
	</select>
	
	<select id="selectProd" resultMap="prodMap" parameterType="String">
		WITH CART_VIEW AS (
		    SELECT DISTINCT CART_PROD, CART_MEMBER
		    FROM CART
		), CARTMEMBER AS(
			SELECT CART_PROD, CART_MEMBER, MEM_NAME, MEM_MAIL
			FROM CART_VIEW INNER JOIN MEMBER ON(CART_MEMBER = MEM_ID)	
		)
		SELECT PROD_ID
			,PROD_NAME
			,PROD_LGU
			,PROD_BUYER
			,PROD_COST
			,PROD_PRICE
			,PROD_SALE
			,PROD_OUTLINE
			,PROD_DETAIL
			,PROD_IMG
			,PROD_TOTALSTOCK
			,PROD_INSDATE
			,PROD_PROPERSTOCK
			,PROD_SIZE
			,PROD_COLOR
			,PROD_DELIVERY
			,PROD_UNIT
			,PROD_QTYIN
			,PROD_QTYSALE
			,PROD_MILEAGE
			,BUYER_ID
			,BUYER_NAME
			,BUYER_LGU
			,BUYER_BANK
			,BUYER_BANKNO
			,BUYER_BANKNAME
			,BUYER_ZIP
			,BUYER_ADD1
			,BUYER_ADD2
			,BUYER_COMTEL
			,BUYER_FAX
			,BUYER_MAIL
			,BUYER_CHARGER
			,BUYER_TELEXT
			,LPROD_ID
			,LPROD_GU
			,LPROD_NM
            ,MEM_NAME
            ,MEM_MAIL
		FROM PROD INNER JOIN BUYER ON (PROD_BUYER = BUYER_ID)
		    	  INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
                  LEFT OUTER JOIN CARTMEMBER ON (PROD_ID = CART_PROD)
		WHERE PROD_ID=#{prodId}
	</select>
	
	<insert id="insertProd" parameterType="ProdVO">
		<selectKey order="BEFORE" resultType="string" keyProperty="prodId">
			SELECT #{prodLgu}||LPAD(NVL(TO_NUMBER(SUBSTR(MAX(PROD_ID),5)),0)+1,6,'0')
			FROM PROD
			WHERE PROD_LGU=#{prodLgu}
		</selectKey>
			Insert INTO PROD
			(
				PROD_ID
				,PROD_NAME
				,PROD_LGU
				,PROD_BUYER
				,PROD_COST
				,PROD_PRICE
				,PROD_SALE
				,PROD_OUTLINE
				,PROD_DETAIL
				,PROD_IMG
				,PROD_TOTALSTOCK
				,PROD_INSDATE
				,PROD_PROPERSTOCK
				,PROD_SIZE
				,PROD_COLOR
				,PROD_DELIVERY
				,PROD_UNIT
				,PROD_QTYIN
				,PROD_QTYSALE
				,PROD_MILEAGE
			)VALUES(
				#{prodId}
				, #{prodName, jdbcType=VARCHAR}
				, #{prodLgu, jdbcType=CHAR}
				, #{prodBuyer, jdbcType=CHAR}
				, #{prodCost, jdbcType=NUMERIC}
				, #{prodPrice, jdbcType=NUMERIC}
				, #{prodSale, jdbcType=NUMERIC}
				, #{prodOutline, jdbcType=VARCHAR}
				, #{prodDetail, jdbcType=CLOB}
				, #{prodImg, jdbcType=VARCHAR}
				, #{prodTotalstock, jdbcType=NUMERIC}
				, #{prodInsdate, jdbcType=DATE}
				, #{prodProperstock, jdbcType=NUMERIC}
				, #{prodSize, jdbcType=VARCHAR}
				, #{prodColor, jdbcType=VARCHAR}
				, #{prodDelivery, jdbcType=VARCHAR}
				, #{prodUnit, jdbcType=VARCHAR}
				, #{prodQtyin, jdbcType=NUMERIC}
				, #{prodQtysale, jdbcType=NUMERIC}
				, #{prodMileage, jdbcType=NUMERIC}
			)
	</insert>

	<update id="updateProd" parameterType="ProdVO">
		UPDATE PROD
 SET
  
  PROD_NAME= #{prodName,jdbcType=VARCHAR}
, PROD_LGU= #{prodLgu,jdbcType=CHAR}
, PROD_BUYER= #{prodBuyer,jdbcType=CHAR}
, PROD_COST=#{prodCost,jdbcType=NUMERIC}
, PROD_PRICE=#{prodPrice,jdbcType=NUMERIC}
, PROD_SALE=#{prodSale,jdbcType=NUMERIC}
, PROD_OUTLINE=#{prodOutline,jdbcType=VARCHAR}
, PROD_DETAIL=#{prodDetail,jdbcType=CLOB}
, PROD_TOTALSTOCK= #{prodTotalstock,jdbcType=NUMERIC}
, PROD_INSDATE= #{prodInsdate,jdbcType=DATE}
, PROD_PROPERSTOCK=#{prodProperstock,jdbcType=NUMERIC}
, PROD_SIZE = #{prodSize,jdbcType=VARCHAR}
, PROD_COLOR = #{prodColor,jdbcType=VARCHAR}
, PROD_DELIVERY= #{prodDelivery,jdbcType=VARCHAR}
, PROD_UNIT = #{prodUnit,jdbcType=VARCHAR}
, PROD_QTYIN = #{prodQtyin,jdbcType=NUMERIC}
, PROD_QTYSALE= #{prodQtysale,jdbcType=NUMERIC}
, PROD_MILEAGE =#{prodMileage,jdbcType=NUMERIC}
<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(prodImg)">
, PROD_IMG =#{prodImg,jdbcType=VARCHAR}
</if>

   WHERE PROD_ID =#{prodId}
	</update>

</mapper>

